{contentType text}
{extends 'components.widget-base'}
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<manialink version="3">
    {block id}server-hopper-widget{/block}
    {block size}44 50{/block}

    {block content}
    <quad size="50 5" bgcolor="{config('colors.ui.window.header.color')}" opacity="0.9" z-index="-1" />
    <quad id="bg" size="50 20" pos="0 -5" bgcolor="{config('colors.ui.window.bg.color')}" opacity="{config('colors.ui.widget.bg.opacity') - 0.15}" z-index="-1" />
    <label pos="2 -2.5" valign="center" textsize="0.5" text=" Servers" z-index="1" textprefix="$s" textfont="{config('colors.ui.font')|noescape}" />

    <frame id="data" pos="0 -7.25" scale="0.9">
        {for $i=0; $i<7; $i++}
        <frame pos="0 {$i * -3.5}">
            <label pos="5.5 0" size="8 4" halign="right" valign="center" text="0" textsize="0.8" textprefix="$s" textfont="{config('colors.ui.font')|noescape}" />
            <label pos="5.5 -0.35" size="6 4" halign="left" valign="center" text="1" textsize="1" scale="0.65" textprefix="/" textfont="{config('colors.ui.font')|noescape}" textcolor="aaa" />
            <label pos="10.5 0" size="38 4" valign="center" text="server name" textsize="0.8" textfont="{config('colors.ui.font')|noescape}" />
        </frame>
        {/for}
    </frame>
    {/block}

    {block script}
    <script><!--
    Text getJoinLink(Text login, Text title, Text name, Boolean hasPassword){
        declare Text youAreHere = "";
        declare Text pw = "";

        if(login == CurrentServerLogin){
            youAreHere = "$z  $999 you";
        }

        if(hasPassword){
            pw = " $fff";
        }

        return "$p[#join=" ^ login ^ "@" ^ title ^ "]" ^ name ^ pw ^ youAreHere;
    }

    Void updateWidget(Text data){
        declare bg <=> (Page.MainFrame.GetFirstChild("bg") as CMlQuad);
        declare dataFrame <=> (Page.MainFrame.GetFirstChild("data") as CMlFrame);
        declare Text[Text][] servers;
        declare filled = 0;
        declare Text pw = "";
        servers.fromjson(data);

        foreach(server in servers){
            if(filled >= servers.count || filled >= dataFrame.Controls.count){
                break;
            }

            declare frame = (dataFrame.Controls[filled] as CMlFrame);
            frame.Show();

            if(TL::ToInteger(server["players"]) > 0){
                (frame.Controls[0] as CMlLabel).SetText("$fff" ^ server["players"]);
            }else{
                (frame.Controls[0] as CMlLabel).SetText("$aaa" ^ server["players"]);
            }

            (frame.Controls[1] as CMlLabel).SetText(server["max"]);
            (frame.Controls[2] as CMlLabel).SetText(getJoinLink(server["login"], server["title"], server["name"], server["pw"] == "True"));

            filled += 1;
        }

        for(x, filled, dataFrame.Controls.count - 1){
            (dataFrame.Controls[x] as CMlFrame).Hide();
        }

        bg.Size = <bg.Size[0], filled * 3.0 + 3.0>;
    }
    --></script>
    {/block}

    <script><!--
    {block globals}
    {/block}

    {block bootScript}
        declare Integer LastServersWidgetUpdate for This;
        declare Text ServersWidgetInfo for This;
        declare Integer lastUpdate = 0;

        left__ = {config('server-hopper.ui.position') == 'left' ? 'True' : 'False'};
        slot__ = {config('server-hopper.ui.slot')};
    {/block}

    {block loop}
            if(lastUpdate != LastServersWidgetUpdate){
                lastUpdate = LastServersWidgetUpdate;
                updateWidget(ServersWidgetInfo);
            }
    {/block}

    {block pendingEvents}
    {/block}
--></script>
</manialink>