<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<manialink name="ESC:MatchSettingsManager:Overview" id="MSM_Overview" version="3">

    <frame id="overview" pos="-45 25">
        <quad size="90 {$settings->count() * 5 + 12}" pos="0 -6" bgcolor="{config('colors.ui.background')}" opacity="0.8" z-index="-1" />
        <quad size="90 6" bgcolor="{config('colors.ui.header')}" opacity="0.9" z-index="0" />
        <label pos="2 -3" valign="center" textsize="1" text="MatchSettings-Manager" z-index="1" />
        <label class="close" pos="87 -3" size="3 3" text="❌" textsize="1.2" z-index="2" halign="center" valign="center" textcolor="ffff" ScriptEvents="1" focusareacolor1="0000" />

        <frame pos="2 -3" z-index="2">
            {foreach $settings as $settingsFile}
            <frame pos="0 {$iterator->counter * -5 - 2}" data-setting="{$settingsFile}">
                <label pos="0 0"  valign="center" text="{$settingsFile}" textsize="1" />
                <label class="edit" pos="41 0" size="18 4" halign="center" valign="center" text=" Edit" textsize="0.6" ScriptEvents="1" />
                <label class="duplicate" pos="59 0" size="18 4" halign="center" valign="center" text=" Duplicate" textsize="0.6" ScriptEvents="1" />
                <label class="delete" pos="77 0" size="18 4" halign="center" valign="center" text=" Delete" textsize="0.6" ScriptEvents="1" focusareacolor1="f003" focusareacolor2="b00a" />
            </frame>
            {/foreach}
        </frame>

        <frame pos="0 {$settings->count() * -5 - 9}" z-index="5">
            <quad pos="2 0" size="86 0.2" bgcolor="{config('colors.ui.header')}" opacity="0.5" z-index="1" />
            <label pos="12 -4" valign="center" size="12 4" textsize="0.8" text="New:"/>
            <entry pos="20 -4" valign="center" size="40 4" textsize="0.8" />
            <label pos="68 -4" valign="center" halign="center" size="15 4" textsize="0.8" text="Create" focusareacolor1="{config('colors.ui.header')}6" focusareacolor2="{config('colors.ui.header')}f" ScriptEvents="1"/>
        </frame>
    </frame>

    <frame id="confirm-dialog" pos="-40 9" z-index="10" hidden="1">
        <quad size="80 18" bgcolor="{config('colors.ui.background')}" opacity="0.8" z-index="-1" />
        <quad size="80 2" bgcolor="{config('colors.ui.header')}" opacity="0.9" z-index="0" />
        <label pos="40 -6" size="76" valign="center" halign="center" text="" textsize="1" z-index="1" />

        <label class="confirm" pos="30 -13" z-index="0" size="15 5" text="YES" ScriptEvents="1" focusareacolor1="07E20099" halign="center" valign="center" textsize="0.5" focusareacolor2="06BD00AA" scriptevents="1"/>
        <label class="cancel" pos="50 -13" z-index="0" size="15 5" text="CANCEL" ScriptEvents="1" focusareacolor1="f009" halign="center" valign="center" textsize="0.5" focusareacolor2="BD0000AA" scriptevents="1"/>
    </frame>

    <script><!--
    #Include "MathLib" as ML
    #Include "TextLib" as TL

    //Open confirm dialog and return decision
    Boolean confirm(Text question){
        declare confirmDialogFrame <=> (Page.MainFrame.GetFirstChild("confirm-dialog") as CMlFrame);
        declare Boolean answer = False;
        declare Boolean decided = False;

        //show confirm dialog
        confirmDialogFrame.Show();

        //Set question text
        (confirmDialogFrame.Controls[2] as CMlLabel).SetText(question);

        while(!decided){
            yield;

            foreach(event in PendingEvents){
                if(event.Type == CMlScriptEvent::Type::MouseClick && event.Control.HasClass("confirm")){
                    answer = True;
                    decided = True;
                }
                if(event.Type == CMlScriptEvent::Type::MouseClick && event.Control.HasClass("cancel")){
                    decided = True;
                }
            }
        }

        //hide confirm dialog
        confirmDialogFrame.Hide();

        return answer;
    }

    main(){
        declare overview <=> (Page.MainFrame.GetFirstChild("overview") as CMlFrame);

        while(True){
            yield;

            foreach(event in PendingEvents){
                if(event.Type == CMlScriptEvent::Type::MouseClick && event.Control.HasClass("close")){
                    overview.Hide();
                }

                if(event.Type == CMlScriptEvent::Type::MouseClick && event.Control.HasClass("delete")){
                    declare settingsFile = event.Control.Parent.DataAttributeGet("setting");
                    if(confirm("Do you really want to delete " ^ settingsFile ^ "?")){
                        //TODO: Delete functionality
                    }
                }
            }
        }
    }

    --></script>
</manialink>