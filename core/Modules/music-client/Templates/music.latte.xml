<frame id="main-frame">
    <quad pos="40 0" size="10 10" action="ms.menu.showpage" />
    <quad id="window" size="40 10" z-index="-5" ScriptEvents="1" />
    <label pos="45 -5" valign="center" halign="center" textsize="3" size="6 6" text="♫" textcolor="ffff"/>

    <frame id="content" pos="0 0">
        <label id="title" pos="37 -2" z-index="1" size="35 3" text="" halign="right" textcolor="fffe" textsize="1"/>
        <label id="artist" pos="37 -5.5" z-index="1" size="35 3" text="" halign="right" textcolor="fffc" textsize="0.2"/>

        <frame pos="0 -8.5">
            <quad pos="2 0" size="35 1" bgcolor="0003" />
            <quad id="bar" pos="2 0" size="0 1" bgcolor="{primary_color()|noescape}a" />

            <frame pos="2 -4" z-index="10">
                <label id="length" valign="center" pos="0 0" size="5 5" text="" textsize="1"/>
                <label valign="center" id="play-stop" pos="7 0" text="" textsize="1" ScriptEvents="1" />
                <label valign="center" id="skip" pos="11 0" text="" textsize="1" ScriptEvents="1" />

                <label id="title2" valign="center" pos="15 0" z-index="1" size="21 4" text="" halign="left" textcolor="fffe" textsize="0.8"/>
            </frame>
        </frame>
    </frame>
</frame>

<script><!--
#Include "MathLib" as MathLib

Void anim(CMlFrame frame, Text targetPos, Integer duration){
    AnimMgr.Add(frame, targetPos, duration, CAnimManager::EAnimManagerEasing::ExpInOut);
}

main() {
    declare widget <=> (Page.MainFrame.GetFirstChild("widget") as CMlFrame);
    declare player <=> InputPlayer;
    declare Boolean hidden = False;
    declare Boolean isLapRace = Map.TMObjective_IsLapRace;
    declare Integer duration = 800;
    declare Real hideSpeed = ({intval($hideSpeed) > 0 ? intval($hideSpeed) : 1} * 1.0);
    declare Real speed = 0.0;
    declare Text visiblePos = "<frame pos='{('ui.music.pos.visible')|noescape}' />";
    declare Text hiddenPos = "<frame pos='{('ui.music.pos.hidden')|noescape}' />";

    declare title <=> (Page.MainFrame.GetFirstChild("title") as CMlLabel);
    declare title2 <=> (Page.MainFrame.GetFirstChild("title2") as CMlLabel);
    declare artist <=> (Page.MainFrame.GetFirstChild("artist") as CMlLabel);
    declare length <=> (Page.MainFrame.GetFirstChild("length") as CMlLabel);

    declare music = Audio.CreateSound("https://ozonic.co.uk/empty.ogg", 1.0, True, False, False);
    declare bar <=> (Page.MainFrame.GetFirstChild("bar") as CMlQuad);
    declare window <=> (Page.MainFrame.GetFirstChild("window") as CMlQuad);
    declare content <=> (Page.MainFrame.GetFirstChild("content") as CMlFrame);
    declare mainFrame <=> (Page.MainFrame.GetFirstChild("main-frame") as CMlFrame);
    declare playStop <=> (Page.MainFrame.GetFirstChild("play-stop") as CMlLabel);
    declare skip <=> (Page.MainFrame.GetFirstChild("skip") as CMlLabel);
    declare Boolean playing = True;
    declare Real playPos = 0.0;
    declare Text currentSongUrl = "";
    declare Integer songCounter = 0;

    declare Text contentNormal = """<frame pos="0 0" />""";
    declare Text contentHover = """<frame pos="0 6" />""";
    declare Boolean hover = False;

    mainFrame.ClipWindowActive = True;
    mainFrame.ClipWindowRelativePosition = <25.0,-5.3>;
    mainFrame.ClipWindowSize = <50.0,7.0>;

    while (True) {
        yield;

        while(InputPlayer == Null){
            sleep(100);
        }

        declare Text Song_Url for InputPlayer = "-";
        declare Text Song_Title for InputPlayer = "-";
        declare Text Song_Artist for InputPlayer = "-";
        declare Text Song_Length for InputPlayer = "-";

        if(Song_Url == "-"){
            continue;
        }

        if(Song_Url != currentSongUrl){
            currentSongUrl = Song_Url;

            title.SetText(Song_Title);
            title2.SetText(Song_Title);
            artist.SetText(Song_Artist);
            length.SetText(Song_Length);

            music.Stop();
            music = Audio.CreateSound(Song_Url, 1.0, True, False, False);
            songCounter = songCounter + 1;
            music.Play();
        }

        playPos = Audio.Sounds[songCounter].PlayCursor / Audio.Sounds[songCounter].PlayLength;
        bar.Size = <(playPos * 35), 1.0>;

        if(playPos > 0.99){
            TriggerPageAction("music.next");
            return;
        }

        foreach(Event in PendingEvents){
            //Hover effects on main
            if(Event.Type == CMlScriptEvent::Type::MouseOver && (Event.Control == window || Event.Control == playStop || Event.Control == skip) && !hover){
                anim(content, contentHover, 200);
                hover = True;
            }
            if(Event.Type == CMlScriptEvent::Type::MouseOut && (Event.Control == window || Event.Control == playStop || Event.Control == skip) && hover){
                anim(content, contentNormal, 200);
                hover = False;
            }

            //play/stop button
            if(Event.Type == CMlScriptEvent::Type::MouseClick && Event.Control == playStop){
                if(playing){
                    playing = False;
                    playStop.SetText("");
                    music.Stop();
                }else{
                    playing = True;
                    playStop.SetText("");
                    music.Play();
                }
            }

            //skip button
            if(Event.Type == CMlScriptEvent::Type::MouseClick && Event.Control == skip){
                TriggerPageAction("music.next");
            }
        }

        if(player != Null){
            declare Real UI_Hide_Speed for InputPlayer = 1.0;

            speed = player.Speed;

            if(speed < 0){
                speed = speed  * -1;
            }

            if(!isLapRace && player.CurrentNbLaps >= 1 || UI_Hide_Speed == 0.0){
                if(player != Null && speed < UI_Hide_Speed && hidden){
                    anim(widget, visiblePos, duration);
                    hidden = False;
                }
            }else{
                if(player != Null && speed >= UI_Hide_Speed && !hidden){
                    anim(widget, hiddenPos, duration);
                    hidden = True;
                }

                if(player != Null && speed < UI_Hide_Speed && hidden){
                    anim(widget, visiblePos, duration);
                    hidden = False;
                }
            }
        }
    }
}
--></script>