<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<manialink name="ESC:HideSettings" id="HideSettings" version="3">
    <frame id="settings" pos="-20 10">
        <quad size="40 5" bgcolor="{config('colors.ui.header')}c" z-index="-1" />
        <quad size="40 20" bgcolor="000c" z-index="-1" />
        <label pos="1.5 -2.5" valign="center" textsize="0.5" textprefix="$s" text="UI Autohide config" />
        <label class="close" pos="37.5 -2.5" size="5 5" valign="center" halign="center" textsize="0.5" text="" ScriptEvents="1" focusareacolor1="0000" focusareacolor2="0001" />

        <label id="speed" pos="20 -8" textsize="0.2" textprefix="Speed: " text="1.0" halign="center" valign="center" />
        <quad class="bar" pos="2 -10" size="36 2" bgcolor="000c" ScriptEvents="1" />
        <quad id="currentBar" pos="2 -10" size="0 2" bgcolor="{config('colors.ui.header')}6" z-index="1" />
        <quad id="hoverBar" pos="2 -10" size="0 2" bgcolor="{config('colors.ui.header')}a" z-index="2" />

        <label class="save" pos="20 -16" scale="0.8" size="20 5" text="Save" textsize="1" valign="center" halign="center" focusareacolor1="{config('colors.ui.header')}9" focusareacolor2="{config('colors.ui.header')}c" ScriptEvents="1" />
    </frame>

    <script><!--
    #Include "MathLib" as ML
    #Include "TextLib" as TL

    Void updateSpeedLabel(Integer speed){
        declare speedLabel = (Page.MainFrame.GetFirstChild("speed") as CMlLabel);
        speedLabel.SetText(speed ^ " km/h");
    }

    main(){
        declare savedSpeed = {$speed|noescape};
        declare speed = 0;
        declare settings = (Page.MainFrame.GetFirstChild("settings") as CMlFrame);
        declare currentBar = (Page.MainFrame.GetFirstChild("currentBar") as CMlQuad);
        declare hoverBar = (Page.MainFrame.GetFirstChild("hoverBar") as CMlQuad);
        declare Boolean hidden = True;

        hoverBar.Hide();

        updateSpeedLabel(savedSpeed);
        declare Real set = savedSpeed / 1000.0;
        currentBar.Size = <set * 36.0, 2.0>;

        declare Boolean mouseInsideBar;

        while(True){
            yield;

            mouseInsideBar = MouseX >= currentBar.AbsolutePosition_V3[0] && MouseX <= (currentBar.AbsolutePosition_V3[0] + 36.0)
                                        && MouseY >= (currentBar.AbsolutePosition_V3[1] - 3.0) && MouseY <= (currentBar.AbsolutePosition_V3[1] + 1.0);

            if(mouseInsideBar && hidden){
                hidden = False;
                hoverBar.Show();
            }

            if(!mouseInsideBar && !hidden){
                hidden = True;
                hoverBar.Hide();
                updateSpeedLabel(savedSpeed);
            }

            if(mouseInsideBar){
                declare hoverPercent = (MouseX - currentBar.AbsolutePosition_V3[0]) / 36.0;
                speed = ML::NearestInteger(hoverPercent * 1000.0);

                if(speed < 7){
                    speed = 1;
                }

                updateSpeedLabel(speed);
                hoverBar.Size = <hoverPercent * 36.0, 2.0>;
            }

            foreach(event in PendingEvents){
                if(event.Control == Null){
                    continue;
                }

                if(event.Control.HasClass("close") && event.Type == CMlScriptEvent::Type::MouseClick){
                    settings.Hide();
                }

                if(event.Control.HasClass("bar") && event.Type == CMlScriptEvent::Type::MouseClick){
                    savedSpeed = speed;
                    declare Real set = savedSpeed / 1000.0;
                    currentBar.Size = <set * 36.0, 2.0>;
                }

                if(event.Control.HasClass("save") && event.Type == CMlScriptEvent::Type::MouseClick){
                    TriggerPageAction("hide.save," ^ savedSpeed);
                    settings.Hide();
                }
            }
        }
    }

    --></script>
</manialink>