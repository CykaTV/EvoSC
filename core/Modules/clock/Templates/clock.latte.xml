<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<manialink name="ESC:clock-widget" id="clock-widget" version="3">
    <frame pos="{config('clock.pos.visible')}" id="widget" scale="0.8" size="50 10">
        <quad id="bg" pos="0 0" size="40 10" bgcolor="{config('colors.ui.widget.bg.color')}" opacity="{config('colors.ui.widget.bg.opacity') - 0.15}" z-index="-2"/>
        <quad pos="40 0" size="10 10" bgcolor="{config('colors.ui.widget.header.color')}e" z-index="-2"/>

        <label id="time" pos="38 -5" size="30 8" valign="center" halign="right" textsize="2" text="time" textprefix="$s" textcolor="{config('colors.ui.widget.text.primary')|noescape}" textfont="{config('colors.ui.font')|noescape}" />

        <frame pos="41.5 -1.5" scale="0.9">
            <label pos="4 -3.5" text="ï‡›" textsize="5" halign="center" valign="center"/>

            <frame pos="-0.1 -0.25">
                <frame id="pointerHours" pos="4.3 -3.5" rot="0"><quad pos="-0.1 0.2" size="1.5 0.4" bgcolor="FFFF"/></frame>
                <frame id="pointerMinutes" pos="4.3 -3.5" rot="0"><quad pos="-0.1 0.15" size="2.4 0.3" bgcolor="FFFF"/></frame>
            </frame>
        </frame>
    </frame>

    <script><!--
        #Include "TextLib" as TextLib

        Void anim(CMlFrame frame, Text targetPos, Integer duration){
            AnimMgr.Add(frame, targetPos, duration, CAnimManager::EAnimManagerEasing::ExpInOut);
        }

        main() {
            declare hideSpeed for LocalUser = 10;
    
            declare timeLabel <=> (Page.MainFrame.GetFirstChild("time") as CMlLabel);
            declare pointerHours <=> (Page.MainFrame.GetFirstChild("pointerHours") as CMlQuad);
            declare pointerMinutes <=> (Page.MainFrame.GetFirstChild("pointerMinutes") as CMlQuad);
            declare bg <=> (Page.MainFrame.GetFirstChild("bg") as CMlQuad);
            declare time <=> (Page.MainFrame.GetFirstChild("time") as CMlLabel);
            declare Text visiblePos = "<frame pos='{config('clock.pos.visible')|noescape}' />";
            declare Text hiddenPos = "<frame pos='{config('clock.pos.hidden')|noescape}' />";
            declare widget <=> (Page.MainFrame.GetFirstChild("widget") as CMlFrame);
            declare Boolean hidden = False;
            declare Boolean isLapRace = Map.TMObjective_IsLapRace;
            declare Integer duration = 800;
            declare Real speed = 0.0;

            declare Text timeString = "";
            declare Integer hours = 0;
            declare Integer minutes = 0;
            declare Real originalOpacity = bg.Opacity;

            while(True){
                yield;

                timeString = TextLib::SubString(CurrentLocalDateText, 11, 5);
                timeLabel.SetText(timeString);

                hours = TextLib::ToInteger(TextLib::SubString(timeString, 0, 2));
                minutes = TextLib::ToInteger(TextLib::SubString(timeString, 3, 2));

                pointerHours.RelativeRotation = (hours/12.0) * 360 - 90;
                pointerMinutes.RelativeRotation = (minutes/60.0) * 360 - 90;
                pointerHours.RelativeRotation += (pointerMinutes.RelativeRotation / 12);

                if(InputPlayer == Null){
                    sleep(500);
                    continue;
                }

                declare Boolean playerIsRacing = InputPlayer.RaceState == CTmMlPlayer::ERaceState::Running;
                declare Boolean overHidespeed = InputPlayer.DisplaySpeed >= hideSpeed;

                if(overHidespeed && playerIsRacing && !hidden){
                    hidden = True;
                    AnimMgr.Add(widget, hiddenPos, 800, CAnimManager::EAnimManagerEasing::ExpInOut);
                    AnimMgr.Add(bg, "<quad opacity='0.0' />", 800, CAnimManager::EAnimManagerEasing::ExpInOut);
                    AnimMgr.Add(time, "<label scale='1.6' />", 800, CAnimManager::EAnimManagerEasing::ExpInOut);
                }
                if((!overHidespeed || !playerIsRacing) && hidden){
                    hidden = False;
                    AnimMgr.Add(widget, visiblePos, 800, CAnimManager::EAnimManagerEasing::ExpInOut);
                    AnimMgr.Add(bg, "<quad opacity='" ^ originalOpacity ^ "' />", 800, CAnimManager::EAnimManagerEasing::ExpInOut);
                    AnimMgr.Add(time, "<label scale='1.0' />", 800, CAnimManager::EAnimManagerEasing::ExpInOut);
                }
            }
        }
    --></script>
</manialink>