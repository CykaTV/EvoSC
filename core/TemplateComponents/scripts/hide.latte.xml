{contentType text}
<script><!--
declare Vec2 HS_POS;
declare CMlFrame HS_Target;
declare Boolean HS_Hidden;

Void hs_hide(){
    HS_Hidden = True;
    declare Real x;
    if(HS_POS[0] < 0.0){
        x = (HS_Target.Size[0] * -HS_Target.RelativeScale) - 160.0;
    }else{
        x = 160.0;
    }
    AnimMgr.Add(HS_Target, "<frame pos='" ^ x ^ " " ^ HS_POS[1] ^ "' />", 800, CAnimManager::EAnimManagerEasing::ExpInOut);
}

Void hs_show(){
    HS_Hidden = False;
    AnimMgr.Add(HS_Target, "<frame pos='" ^ HS_POS[0] ^ " " ^ HS_POS[1] ^ "' />", 600, CAnimManager::EAnimManagerEasing::ExpInOut);
}

Void hidescript(){
    if(HS_Target == Null){
        HS_Target <=> (Page.MainFrame.GetFirstChild("{isset($target) ? $target : 'widget'}") as CMlFrame);
    }

    declare UISettings settings for This;
    declare hideSpeed = settings.speed;

    if(hideSpeed == -1 || InputPlayer == Null){
        return;
    }

    declare Boolean mapFinished = {(isset($hideOnPodium) ? "UI.UISequence == CUIConfig::EUISequence::Podium" : "False")|noescape};

    if(mapFinished){
        if(!HS_Hidden){
            hs_hide();
        }
    }else{
        declare Boolean playerIsRacing = InputPlayer.RaceState == CTmMlPlayer::ERaceState::Running;
        declare Boolean overHidespeed = InputPlayer.DisplaySpeed > hideSpeed;

        if(overHidespeed && playerIsRacing && !HS_Hidden){
            hs_hide();

            {if !isset($doNotPause)}
            wait(InputPlayer.DisplaySpeed < hideSpeed || InputPlayer.RaceState != CTmMlPlayer::ERaceState::Running);
            {/if}
        }
        if((!overHidespeed || !playerIsRacing) && HS_Hidden){
            hs_show();
        }
    }
}
--></script>