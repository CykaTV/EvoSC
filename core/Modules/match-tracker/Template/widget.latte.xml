{contentType text}
{extends 'components.widget-base'}
{php $doNotPause = true;}
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<manialink version="3">
    {block id}match-tracker-widget{/block}
    {block size}44 35{/block}

    {block content}
    <quad size="50 5" bgcolor="{config('colors.ui.window.header.color')}" opacity="0.9" z-index="-1" />
    <quad id="bg" size="50 50" pos="0 -5" bgcolor="{config('colors.ui.window.bg.color')}" opacity="{config('colors.ui.widget.bg.opacity') - 0.15}" z-index="-1" />
    <label pos="2 -2.5" valign="center" textsize="0.5" text=" Match" z-index="1" textprefix="$s" textfont="{config('colors.ui.font')|noescape}" />

    <frame id="data" pos="1 -7">
        {for $i=0; $i<8; $i++}
        <frame pos="0 {$i * -3.5}">
            <label pos="0 -0.35" size="16 4" halign="left" valign="center" text="Player" textsize="1" scale="0.9" textprefix="" textfont="{config('colors.ui.font')|noescape}" textcolor="fff" />
            <label pos="42 -0.35" size="16 4" halign="right" valign="center" text="Score" textsize="1" scale="0.9" textprefix="" textfont="{config('colors.ui.font')|noescape}" textcolor="fff" />
        </frame>
        {/for}
    </frame>
    {/block}

    {block script}
    <script><!--
    Text formatScoreCorrect(Integer scoreIn, Boolean cutZeroes){
        declare Text secondString;
        declare Text msString;
        declare Integer score;

        score = scoreIn;

        if(score < 0){
            score = -score;
        }

        declare Integer seconds = score / 1000;
        declare Integer minutes = seconds / 60;
        declare Integer ms = score - (seconds * 1000);

        seconds = seconds - (minutes * 60);

        secondString = "" ^ seconds;

        if(seconds < 10 && minutes > 0){
            secondString = "0" ^ seconds;
        }

        if(ms == 0){
            msString = "000";
        }else if(ms > 0 && ms < 10){
            msString = "00" ^ ms;
        }else if(ms >= 10 && ms < 100){
            msString = "0" ^ ms;
        }else{
            msString = "" ^ ms;
        }

        if(cutZeroes && minutes == 0){
            return secondString ^ "." ^ msString;
        }

        return minutes ^ ":" ^ secondString ^ "." ^ msString;
    }

    Void updateWidget(Text data_){
        declare dataFrame <=> (Page.MainFrame.GetFirstChild("data") as CMlFrame);
        declare Text[Text][] data;
        data.fromjson(data_);
        declare i = 0;

        foreach(set in data){
            if(!dataFrame.Controls.existskey(i)){
                return;
            }
            declare controls <=> (dataFrame.Controls[i] as CMlFrame);
            (controls.Controls[0] as CMlLabel).SetText(set["nick"]);
            (controls.Controls[1] as CMlLabel).SetText(set["points"]);
            controls.Show();
            i += 1;
        }

        for(x, i, dataFrame.Controls.count - 1){
            dataFrame.Controls[x].Hide();
        }
    }
    --></script>
    {/block}

    <script><!--
    {block globals}
    {/block}

    {block bootScript}
        declare Integer LastMatchTrackerUpdate for This;
        declare Text MatchTrackerJson for This;
        declare Integer lastUpdate = 0;

        left__ = {config('match-tracker.ui.position') == 'left' ? 'True' : 'False'};
        slot__ = {config('match-tracker.ui.slot')};
    {/block}

    {block loop}
            if(lastUpdate != LastMatchTrackerUpdate){
                lastUpdate = LastMatchTrackerUpdate;
                updateWidget(MatchTrackerJson);
            }
    {/block}

    {block pendingEvents}
    {/block}
--></script>
</manialink>