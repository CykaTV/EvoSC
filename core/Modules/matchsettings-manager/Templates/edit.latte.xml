<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<manialink name="ESC:MatchSettingsManagerNew" id="ESC:matchsettings-manager" version="3"
           xmlns:n="http://www.w3.org/1999/xhtml">
    <frame id="window" pos="-50 10" size="90 70">
        <quad pos="0 0" size="90 5" bgcolor="{config('colors.ui.window.header.color')}" opacity="0.9" z-index="-1"/>
        <quad id="handle" data-id="help" pos="0 0" size="85 5" z-index="5"/>
        <quad id="bg" pos="0 -5" size="90 100" bgcolor="{config('colors.ui.window.bg.color')}" opacity="{config('colors.ui.window.bg.opacity')}" z-index="-1"/>
        <label pos="5 -2.5" textsize="0.8" text="Edit {$name} (no saving)" textprefix="$s" valign="center" textfont="{config('colors.ui.font')|noescape}"/>
        <label pos="2 -2.5" textsize="0.8" text="" textprefix="$s" valign="center" textfont="{config('colors.ui.font')|noescape}" action="msm.overview"/>
        <label class="close" pos="87.5 -2.5" size="5 5" textsize="0.2" text="❌" textfont="{config('colors.ui.font')|noescape}" textprefix="$s" valign="center" halign="center" ScriptEvents="1" focusareacolor1="0000" focusareacolor2="0003"/>

        <entry id="filename" pos="2 -9" size="60 4" textsize="0.5" valign="center" textfont="{config('colors.ui.font')|noescape}" />
        <label pos="75 -9" size="25 4" text="Update filename" halign="center" valign="center" textsize="0.5" textfont="{config('colors.ui.font')|noescape}" ScriptEvents="1" focusareacolor1="{config('colors.ui.window.header.color')}3" focusareacolor2="{config('colors.ui.window.header.color')}9" />

        <frame pos="2 -15" id="rows">
            {foreach $nodes as $key => $node}
            <frame id="r{$key}" pos="0 {$key * -5}" data-row="{$key}" data-nodes="{$node->count()}">
                {if $node->count() > 0}
                <label class="collapsable" pos="43 0" size="86 4" textprefix="{$node->getName()}  " text="" halign="center" valign="center" textsize="0.5" textfont="{config('colors.ui.font')|noescape}"
                       ScriptEvents="1" focusareacolor1="{config('colors.ui.window.header.color')}3" focusareacolor2="{config('colors.ui.window.header.color')}9" />

                <frame pos="0 -1.5" size="86 {$node->count()*5}" z-index="100">
                    <quad pos="0 -0.5" size="100 {$node->count()*5}" bgcolor="{config('colors.ui.window.bg.color')}" z-index="-1" />
                    {php $i=0}
                    {foreach $node as $subNode}
                    <label pos="2 {$i * -5 - 3}" size="25 4" text="{$subNode->getName()}" halign="left" valign="center" textsize="0.75" textfont="{config('colors.ui.font')|noescape}" />
                    <label pos="84 {$i++ * -5 - 3}" size="25 4" text="{$subNode}" halign="right" valign="center" textsize="0.75" textfont="{config('colors.ui.font')|noescape}" />
                    {/foreach}
                </frame>
                {else}
                <label pos="0 0" size="25 4" text="{$node->getName()}" halign="left" valign="center" textsize="0.75" textfont="{config('colors.ui.font')|noescape}" />
                <label pos="86 0" size="25 4" text="{$node}" halign="right" valign="center" textsize="0.75" textfont="{config('colors.ui.font')|noescape}" />
                {/if}
            </frame>
            {/foreach}
        </frame>
    </frame>

    {include 'scripts.includes'}
    {include 'scripts.drag'}

    <script><!--

    Boolean isCollapsed(CMlFrame frame){
        declare trigger = (frame.Controls[0] as CMlLabel);
        return trigger.Value == "";
    }

    Void moveDown(Integer index, Integer nodes){
        declare rows <=> (Page.MainFrame.GetFirstChild("rows") as CMlFrame);

        for(i, index + 1, rows.Controls.count - 1){
            declare row = (rows.Controls[i] as CMlFrame);
            declare targetY = row.RelativePosition_V3[1] - (nodes * 5.0);
            AnimMgr.Add(row, "<frame pos='0 "^targetY^"' />", 200, CAnimManager::EAnimManagerEasing::ExpInOut);
        }
    }

    Void moveUp(Integer index, Integer nodes){
        declare rows <=> (Page.MainFrame.GetFirstChild("rows") as CMlFrame);

        for(i, index + 1, rows.Controls.count - 1){
            declare row = (rows.Controls[i] as CMlFrame);
            declare targetY = row.RelativePosition_V3[1] + (nodes * 5.0);
            AnimMgr.Add(row, "<frame pos='0 "^targetY^"' />", 200, CAnimManager::EAnimManagerEasing::ExpInOut);
        }
    }

    main(){
        declare window <=> (Page.MainFrame.GetFirstChild("window") as CMlFrame);
        declare rows <=> (Page.MainFrame.GetFirstChild("rows") as CMlFrame);
        declare filenameEntry <=> (Page.MainFrame.GetFirstChild("filename") as CMlEntry);

        filenameEntry.SetText({$name}, False);

        foreach(row in rows.Controls){
            declare r = (row as CMlFrame);

            if(r.Controls[0].HasClass("collapsable")){
                declare sub = (r.Controls[1] as CMlFrame);
                r.DataAttributeSet("oy", "" ^ r.RelativePosition_V3[1]);
                sub.DataAttributeSet("osy", "" ^ sub.Size[1]);
                sub.Size = <sub.Size[0], 0.0>;
            }
        }

        while(True){
            yield;

            if(window.Visible){
                foreach(event in PendingEvents){
                    if(event.Control == Null) continue;

                    if(event.Control.HasClass("close") && event.Type == CMlScriptEvent::Type::MouseClick){
                        window.Hide();
                        return;
                    }

                    if(event.Control.HasClass("collapsable") && event.Type == CMlScriptEvent::Type::MouseClick){
                        declare label = (event.Control as CMlLabel);
                        declare frame = (event.Control.Parent.Controls[1] as CMlFrame);
                        declare index = TL::ToInteger(event.Control.Parent.DataAttributeGet("row"));
                        declare nodes = TL::ToInteger(event.Control.Parent.DataAttributeGet("nodes"));

                        if(isCollapsed(event.Control.Parent)){
                            label.SetText("");
                            declare osy = TL::ToReal(frame.DataAttributeGet("osy"));
                            AnimMgr.Add(frame, "<frame size='"^frame.Size[0]^" "^osy^"' />", 200, CAnimManager::EAnimManagerEasing::ExpInOut);
                            moveDown(index, nodes);
                        }else{
                            label.SetText("");
                            AnimMgr.Add(frame, "<frame size='"^frame.Size[0]^" 0' />", 200, CAnimManager::EAnimManagerEasing::ExpInOut);
                            moveUp(index, nodes);
                        }
                    }
                }

                maniaLinkDrag();
            }
        }
    }

    --></script>
</manialink>