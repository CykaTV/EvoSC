<label pos="45 -5" valign="center" halign="center" textsize="3" size="6 6" text="♫" textcolor="ffff"/>

<label pos="2 -1.5" z-index="1" size="36 3" text="{$song->title ?? $song->file}" halign="left" textcolor="fffe" textsize="1"/>
<label pos="38 -6.8" z-index="1" size="16 3" text="{$song->artist}" halign="right" textcolor="fff9" textsize="0.45"/>

<quad pos="2 -5.2" size="36 0.4" bgcolor="0003" />
<quad id="bar" pos="2 -5.2" size="0 0.4" bgcolor="{primary_color()|noescape}a" />

<quad pos="40 0" size="10 10" action="ms.menu.showpage" />

<frame pos="20 -7" scale="0.4">
    <label pos="-20 0" text="" action="music.next" />
    <label id="passed" pos="-45 0" z-index="1" size="22 3" text="{$song->length}" textcolor="fffe" textsize="4"/>
</frame>

<script><!--
#Include "MathLib" as MathLib

Void anim(CMlFrame frame, Text targetPos, Integer duration){
    AnimMgr.Add(frame, targetPos, duration, CAnimManager::EAnimManagerEasing::ExpInOut);
}

    main() {
    declare widget <=> (Page.MainFrame.GetFirstChild("widget") as CMlFrame);
    declare player <=> InputPlayer;
    declare Boolean hidden = False;
    declare Boolean isLapRace = Map.TMObjective_IsLapRace;
    declare Integer duration = 800;
    declare Real hideSpeed = ({intval($hideSpeed) > 0 ? intval($hideSpeed) : 1} * 1.0);
    declare Real speed = 0.0;
    declare Text visiblePos = "<frame pos='{$config->pos->visible|noescape}' />";
    declare Text hiddenPos = "<frame pos='{$config->pos->hidden|noescape}' />";

    declare music <=> Audio.CreateSound("{$song->url|noescape}", 1.0, True, False, False);
    declare bar <=> (Page.MainFrame.GetFirstChild("bar") as CMlQuad);
    declare audio <=> (Page.MainFrame.GetFirstChild("music") as CMlMediaPlayer);
    declare timePassedLabel <=> (Page.MainFrame.GetFirstChild("passed") as CMlLabel);
    declare Integer timeLeft = 0;
    declare Integer timePassed = 0;
    declare Integer playtimeMinutes = 0;
    declare Integer playtimeSeconds = 0;
    declare Text length = {$song->length};
    declare Integer lengthInSeconds = {$lengthInSeconds};
    declare Integer timeEnd = CurrentTime + {$lengthInSeconds}000;
    music.Play();
    while (True) {
        yield;

        timeLeft = (timeEnd/1000) - (CurrentTime/1000);
        timePassed =  lengthInSeconds - timeLeft;
        playtimeMinutes = MathLib::FloorInteger(timePassed/60.0);
        playtimeSeconds = timePassed - (playtimeMinutes*60);
        if(playtimeSeconds < 10){
            timePassedLabel.SetText(playtimeMinutes ^ ":0" ^ playtimeSeconds ^ " / " ^ length);
        }else{
            timePassedLabel.SetText(playtimeMinutes ^ ":" ^ playtimeSeconds ^ " / " ^ length);
        }
        if(timePassed > 0){
            bar.Size = <(timePassed / (lengthInSeconds * 1.0))*36.0,0.4>;
            if(timePassed >= lengthInSeconds){
                TriggerPageAction("music.next");
            }
        }

        if(player != Null){
            declare Real UI_Hide_Speed for InputPlayer = 1.0;

            speed = player.Speed;

            if(speed < 0){
                speed = speed  * -1;
            }

            if(!isLapRace && player.CurrentNbLaps >= 1 || UI_Hide_Speed == 0.0){
                if(player != Null && speed < UI_Hide_Speed && hidden){
                    anim(widget, visiblePos, duration);
                    hidden = False;
                }
            }else{
                if(player != Null && speed >= UI_Hide_Speed && !hidden){
                    anim(widget, hiddenPos, duration);
                    hidden = True;
                }

                if(player != Null && speed < UI_Hide_Speed && hidden){
                    anim(widget, visiblePos, duration);
                    hidden = False;
                }
            }
        }
    }
}
--></script>