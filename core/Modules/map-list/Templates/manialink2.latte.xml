<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<manialink name="ESC:Maps:main" id="esc_maps" version="3">
    <frame id="map-list-window" pos="-75.5 45" size="151 101" hidden="0">
        <quad pos="0 0" size="122 11" bgcolor="{header_color()|noescape}c" />
        <quad pos="0 -10.5" size="151 0.5" bgcolor="{header_color()|noescape}f" z-index="2" />
        <quad pos="0 0" size="151 150" bgcolor="{background_color()|noescape}" opacity="0.75" />
        <quad pos="0 0" size="151 150" style="Bgs1" substyle="BgDialogBlur" />
        <label pos="1.5 -3" size="20 5" text=" Maps" valign="center" textsize="1.2" z-index="2" textcolor="ffff" />
        <label class="close" pos="148 -3" size="6 6" text="❌" textsize="1.2" z-index="2" valign="center" halign="center" textcolor="ffff" focusareacolor1="0000" focusareacolor2="{config('colors.ui.header')}f" ScriptEvents="1" />

        <frame id="navbar" pos="0 -5.5" z-index="2">
            <frame pos="10 -3" z-index="2">
                <quad id="maps-button" class="nav-button button" data-page="0" valign="center" halign="center" size="15 4" bgcolor="{header_color()|noescape}" opacity="0.2" z-index="-1" ScriptEvents="1" />
                <label textcolor="ffff" textsize="0.3" valign="center" halign="center" text="Maplist" />
            </frame>

            <frame pos="27 -3" z-index="5">
                <quad class="nav-button button" data-page="1" valign="center" halign="center" size="15 4" bgcolor="{header_color()|noescape}" opacity="0.2" z-index="-1" ScriptEvents="1" />
                <label textcolor="ffff" textsize="0.3" valign="center" halign="center" text="Favorites" />
            </frame>

            <frame pos="44 -3" z-index="5">
                <quad class="nav-button button" data-page="2" valign="center" halign="center" size="15 4" bgcolor="{header_color()|noescape}" opacity="0.2" z-index="-1" ScriptEvents="1" />
                <label textcolor="ffff" textsize="0.3" valign="center" halign="center" text="Queued maps" />
            </frame>
        </frame>

        <framemodel id="Map">
            <quad valign="center" pos="-2 0" size="162 4.5" bgcolor="{header_color()|noescape}" opacity="0" />
            <label pos="1 0" valign="center" size="40 3" text="map name lol asdfasdasdsad" textcolor="ffff" textsize="0.6" z-index="1" />
            <label pos="52 0" valign="center" size="30 3" text="map author name comes here" textcolor="ffff" textsize="0.6" z-index="1" />
            <label pos="88 0" valign="center" size="30 3" halign="center" text="local" textcolor="ffff" textsize="0.6" z-index="1" />
            <label pos="96 0" valign="center" size="30 3" halign="center" text="dedi" textcolor="ffff" textsize="0.6" z-index="1" />
            <label class="fav" pos="115 0" valign="center" size="3 3" text="" textcolor="ffff" textsize="0.6" z-index="1" ScriptEvents="1" focusareacolor1="0000" focusareacolor2="0000" />
            <label pos="106 0" valign="center" size="30 3" halign="center" text="♦♦♦♦♦" textcolor="ffff" textsize="0.6" z-index="1" />

            <frame id="buttons" pos="120 0">
                <label class="btn juke" data-tab="0,1" size="13 3" text=" Juke" textsize="0.6" valign="center" halign="center" ScriptEvents="1" focusareacolor1="{config('colors.ui.header')}3" focusareacolor2="{config('colors.ui.header')}c" />
                <label class="btn info" data-tab="0,1" size="13 3" text=" Info" textsize="0.6" valign="center" halign="center" ScriptEvents="1" focusareacolor1="{config('colors.ui.header')}3" focusareacolor2="{config('colors.ui.header')}c" />
            </frame>
        </framemodel>

        <frame pos="2 -13" z-index="2">
            <frame scale="0.97" pos="0 -6">
                <label pos="1  6" textsize="1" text="Name" scale="0.8" textcolor="{config('colors.ui.header')}" />
                <label pos="52 6" textsize="1" text="Author" scale="0.8" textcolor="{config('colors.ui.header')}" />
                <label pos="88 6" textsize="1" text="Local" halign="center" scale="0.8" textcolor="{config('colors.ui.header')}" />
                <label pos="96 6" textsize="1" text="Dedi" halign="center" scale="0.8" textcolor="{config('colors.ui.header')}" />
                <label pos="106 6" textsize="1" text="Karma" halign="center" scale="0.8" textcolor="{config('colors.ui.header')}" />
                <label pos="117 6" textsize="1" text="Favorite" halign="center" scale="0.8" textcolor="{config('colors.ui.header')}" />

                <frame id="map-list" pos="0 2">
                    {for $i = 0; $i < 20; $i++}
                    <frameinstance pos="0 {$i * -4 - 2}" modelid="Map" hidden="0" />
                    {/for}
                </frame>

                <frame id="pagination" pos="2 -81.5" scale="0.9">
                    <label id="page-info" pos="6 0" valign="center" halign="center" text="1/1" textsize="0.8" ScriptEvents="1" />
                    <label class="previous-page" pos="0 0" size="3.5 3.5" valign="center" halign="center" text="⏴" textsize="1" ScriptEvents="1" focusareacolor1="{config('colors.ui.header')}3" focusareacolor2="{config('colors.ui.header')}c" />
                    <label class="next-page" pos="12 0" size="3.5 3.5" valign="center" halign="center" text="⏵" textsize="1" ScriptEvents="1" focusareacolor1="{config('colors.ui.header')}3" focusareacolor2="{config('colors.ui.header')}c" />
                </frame>

                <frame pos="124 -81.5" scale="0.9">
                    <label pos="30 0" halign="right" valign="center" textsize="0.9" text="🔍" />
                    <entry id="search-input" class="search-input" pos="26.5 0" size="25 3.5" halign="right" valign="center" style="TextValueSmall" default="" textsize="1.2" />
                    <label id="clear-search" class="clear-search" pos="0 0" size="3.5 3.5" halign="center" valign="center" textsize="0.25" text="" focusareacolor1="f003" focusareacolor2="f009" ScriptEvents="1" hidden="1" />
                </frame>
            </frame>
        </frame>
    </frame>

    <frame id="widget" pos="{config('ui.map.pos.visible')}" data-pos-visible="{config('ui.map.pos.visible')}" data-pos-hidden="{config('ui.map.pos.hidden')}" scale="0.8" size="50 10">
        <label pos="38 -2" z-index="1" size="36 3" text="Map name" halign="right" textcolor="eeee" textsize="1.4"/>
        <label pos="38 -7" z-index="1" size="36 3" text="Author name" halign="right" textcolor="dddd" valign="center" textsize="0.6"/>

        <label pos="45 -5" valign="center" halign="center" textsize="2" size="6 6" text="" textcolor="ffff"/>

        <quad pos="0 0" size="40 10" bgcolor="{config('colors.ui.background')}9" ScriptEvents="1" />
        <quad pos="40 0" size="10 10" bgcolor="{config('colors.ui.header')}e" ScriptEvents="1" />

        <frame id="controls" pos="5 -10.5" z-index="10">
            <quad pos="-5 0" size="40 10" bgcolor="{background_color()|noescape}6" z-index="-1" />
            <quad pos="-5 0" size="40 10" bgcolor="{config('colors.ui.header')}f" z-index="-2" />

            <frame pos="1.7 -5">
                <label class="map-control fav" textsize="1.5" size="13.3 10" text="" z-index="0" halign="center" valign="center" ScriptEvents="1" focusareacolor1="0000" focusareacolor2="{config('colors.ui.header')}9" />
                <label pos="0 1.5" textsize="1.5" size="10 10" text="" z-index="1" halign="center" valign="center" />
                <label pos="0 -2" textsize="1" scale="0.8" size="10 10" text="Add" z-index="1" halign="center" valign="center" />
            </frame>

            <frame pos="15 -5">
                <label class="map-control details" textsize="1.5" size="13.3 10" text="" z-index="0" halign="center" valign="center" ScriptEvents="1" focusareacolor1="0000" focusareacolor2="{config('colors.ui.header')}9" />
                <label pos="0 1.5" textsize="1.5" size="10 10" text="" z-index="1" halign="center" valign="center" />
                <label pos="0 -2" textsize="1" scale="0.8" size="10 10" text="Details" z-index="1" halign="center" valign="center" />
            </frame>

            <frame pos="28.3 -5">
                <label class="map-control list" textsize="1.5" size="13.3 10" text="" z-index="0" halign="center" valign="center" ScriptEvents="1" focusareacolor1="0000" focusareacolor2="{config('colors.ui.header')}9" />
                <label pos="0 1.5" textsize="1.5" size="10 10" text="" z-index="1" halign="center" valign="center" />
                <label pos="0 -2" textsize="1" scale="0.8" size="10 10" text="Maps" z-index="1" halign="center" valign="center" />
            </frame>

        </frame>
    </frame>

    <frame id="delete-dialog" pos="-40 9" z-index="10" hidden="1">
        <quad size="80 20" bgcolor="{config('colors.ui.background')}" opacity="0.9" z-index="-1" />
        <quad size="80 2" bgcolor="{config('colors.ui.header')}" opacity="0.9" z-index="0" />
        <label pos="40 -5" size="76" valign="center" halign="center" text="" textsize="1" z-index="1" />
        <label class="perm" pos="40 -9" size="76" valign="center" halign="center" text=" Delete permanently and from all MatchSettings" data-set="0" textsize="1" z-index="1" scale="0.7" focusareacolor1="0000" focusareacolor2="0000" ScriptEvents="1" hidden="1" />

        <label class="confirm" pos="32 -15" z-index="0" size="15 5" text="YES" ScriptEvents="1" focusareacolor1="07E20099" halign="center" valign="center" textsize="0.5" focusareacolor2="06BD00AA" scriptevents="1"/>
        <label class="cancel" pos="48 -15" z-index="0" size="15 5" text="NO" ScriptEvents="1" focusareacolor1="f009" halign="center" valign="center" textsize="0.5" focusareacolor2="BD0000AA" scriptevents="1"/>
        <quad size="80 20" style="Bgs1" substyle="BgDialogBlur" z-index="-1" />
    </frame>

    <script><!--
#Include "MathLib" as ML
#Include "TextLib" as TL

declare Text[Text][] maps;
declare Text[Text][] currentMapPool;
declare Integer lastMapsCount;
declare Integer currentPage;
declare Integer currentTab;
declare CMlFrame mapListFrame;

Void resizeWindow(){
    //baseWidth = 122
}

Void rearrangeButtons(){
    declare mapList <=> (Page.MainFrame.GetFirstChild("map-list") as CMlFrame);
    declare Real padding;

    foreach(control in mapList.Controls){
        declare buttonsFrame = ((control as CMlFrame).GetFirstChild("buttons") as CMlFrame);
        padding = 0.0;

        foreach(button in buttonsFrame.Controls){
            declare Real width = button.Size[0];
            declare offset = width / 2.0 + padding;
            button.RelativePosition_V3 = <offset, 0.0>;
            padding = offset + width / 2.0 + 1.0;
        }
    }
}

Text getLocal(Text mapId){
    declare Integer[Text] Locals for LocalUser;

    if(Locals.existskey(mapId)){
        return TL::ToText(Locals[mapId]) ^ ".";
    }

    return "$999-";
}

Text getDedi(Text mapId){
    declare Integer[Text] Dedis for LocalUser;

    if(Dedis.existskey(mapId)){
        return TL::ToText(Dedis[mapId]) ^ ".";
    }

    return "$999-";
}

Text getStarString(Real rating){
    if(rating == -1){
        return "$666";
    }

    declare Text starString = "";
    declare Real stars = rating / 20.0;
    declare Integer full = ML::FloorInteger(stars);
    declare Real left = stars - full;

    for(i, 0, full - 1){
        starString = starString ^ "$fff";
    }

    if(left >= 0.5){
        starString = starString ^ "$fff";
        full = full + 1;
    }

    for(i, full + 1, 5){
        starString = starString ^ "$666";
    }

    return starString;
}

Void updateView(Text[Text][] mapPool, Integer page){
    declare mapsFrame = (Page.MainFrame.GetFirstChild("map-list") as CMlFrame);
    declare pageInfo = (Page.MainFrame.GetFirstChild("page-info") as CMlLabel);
    declare Integer start = page * 20;
    declare Integer rowsFilled = 0;

    for(i, 0, 19){
        declare Integer id = start + i;

        if(id >= mapPool.count){
            break;
        }

        declare Text[Text] map = mapPool[id];
        declare mapFrame <=> (mapsFrame.Controls[i] as CMlFrame);
        mapFrame.DataAttributeSet("map-id", map["id"]);
        (mapFrame.Controls[1] as CMlLabel).SetText(map["name"]);
        (mapFrame.Controls[2] as CMlLabel).SetText(map["author_nick"]);
        (mapFrame.Controls[3] as CMlLabel).SetText(getLocal(map["id"]));
        (mapFrame.Controls[4] as CMlLabel).SetText(getDedi(map["id"]));
        (mapFrame.Controls[6] as CMlLabel).SetText(getStarString(TL::ToReal(map["rating"])));
        mapFrame.Show();

        rowsFilled = rowsFilled + 1;
    }

    if(rowsFilled < 20){
        for(i, rowsFilled, 19){
            (mapsFrame.Controls[i] as CMlFrame).Hide();
        }
    }

    pageInfo.SetText((page + 1) ^ "/" ^ ML::CeilingInteger(mapPool.count / 20.0));
}

Void search(){
    declare Text[Text][] mapsFound = Text[Text][];
    declare input <=> (Page.MainFrame.GetFirstChild("search-input") as CMlEntry);
    declare clearSearch <=> (Page.MainFrame.GetFirstChild("clear-search") as CMlLabel);

    if(input.Value == ""){
        currentMapPool = maps;
        updateView(maps, 0);
        clearSearch.Hide();
        return;
    }

    for(i, 0, maps.count - 1){
        declare map = maps[i];
        declare searchString = map["name"]^map["author_nick"]^map["author_login"];
        if(TL::Find(input.Value, searchString, False, False)){
            mapsFound.add(map);
        }
    }

    currentMapPool = mapsFound;
    updateView(mapsFound, 0);
    clearSearch.Show();
}

Boolean checkMapChanges(){
    declare Text[Text][] Maps for LocalUser;
    if(Maps.count != lastMapsCount){
        lastMapsCount = Maps.count;
        return True;
    }

    return False;
}

Void checkMapSearchQuery(){
    declare Text MapSearchQuery for LocalUser;
    if(MapSearchQuery != ""){
        declare input <=> (Page.MainFrame.GetFirstChild("search-input") as CMlEntry);

        if(MapSearchQuery == " "){
            MapSearchQuery = "";
        }

        input.SetText(MapSearchQuery, True);
        mapListFrame.Show();
        MapSearchQuery = "";
    }
}

Void buttonPressed(CMlFrame mapFrame, CMlControl control){
    declare mapId = mapFrame.DataAttributeGet("map-id");

    if(control.HasClass("juke")){
        TriggerPageAction("map.queue," ^ mapId);
    }
}

main() {
    lastMapsCount = 0;
    currentPage = 0;
    currentTab = 0;

    mapListFrame = (Page.MainFrame.GetFirstChild("map-list-window") as CMlFrame);

    rearrangeButtons();

    while(True){
        yield;

        foreach(event in PendingEvents){
            if(event.Control == Null){
                continue;
            }

            if(event.Control.HasClass("close") && event.Type == CMlScriptEvent::Type::MouseClick){
                mapListFrame.Hide();
                continue;
            }

            if(event.Control.HasClass("search-input") && event.Type == CMlScriptEvent::Type::EntrySubmit){
                search();
                continue;
            }

            if(event.Control.HasClass("clear-search") && event.Type == CMlScriptEvent::Type::MouseClick){
                declare input <=> (Page.MainFrame.GetFirstChild("search-input") as CMlEntry);
                input.SetText("", True);
                continue;
            }

            if(event.Control.HasClass("previous-page") && event.Type == CMlScriptEvent::Type::MouseClick){
                currentPage = currentPage - 1;
                if(currentPage < 0){
                    currentPage = ML::CeilingInteger(currentMapPool.count / 20.0) - 1;
                }
                updateView(currentMapPool, currentPage);
                continue;
            }

            if(event.Control.HasClass("next-page") && event.Type == CMlScriptEvent::Type::MouseClick){
                currentPage = currentPage + 1;
                if(currentPage >= ML::CeilingInteger(currentMapPool.count / 20.0)){
                    currentPage = 0;
                }
                updateView(currentMapPool, currentPage);
                continue;
            }

            if(event.Control.HasClass("btn")){
                declare mapFrame = (event.Control.Parent.Parent as CMlFrame);

                if(event.Type == CMlScriptEvent::Type::MouseClick){
                    buttonPressed(mapFrame, event.Control);
                    continue;
                }

                if(event.Type == CMlScriptEvent::Type::MouseOver){
                    (mapFrame.Controls[0] as CMlQuad).Opacity = 0.5;
                    continue;
                }

                if(event.Type == CMlScriptEvent::Type::MouseOut){
                    (mapFrame.Controls[0] as CMlQuad).Opacity = 0.0;
                    continue;
                }
            }
        }

        if(checkMapChanges()){
            declare Text[Text][] Maps for LocalUser;
            maps = Maps;

            if(currentMapPool.count == 0){
                currentMapPool = maps;
                updateView(currentMapPool, 0);
            }
        }

        checkMapSearchQuery();
    }
}
    --></script>
</manialink>